{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shreyajayakumar/Documents/CHEF2/frontend/src/lib/axiosInstance.ts"],"sourcesContent":["'use client'\n\nimport axios from \"axios\"\nimport { getSession } from \"next-auth/react\"\n\nconst backendAPI = axios.create({\n  baseURL: \"http://localhost:8000\", // Backend URL\n})\n\nbackendAPI.interceptors.request.use(async (config) => {\n  const session = await getSession()\n\n  if (session?.idToken) {\n    config.headers.Authorization = `Bearer ${session.idToken}`\n  }\n\n  return config\n})\n\nexport default backendAPI\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;AAKA,MAAM,aAAa,wIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC9B,SAAS;AACX;AAEA,WAAW,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO;IACzC,MAAM,UAAU,MAAM,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD;IAE/B,IAAI,SAAS,SAAS;QACpB,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,QAAQ,OAAO,EAAE;IAC5D;IAEA,OAAO;AACT;uCAEe","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/shreyajayakumar/Documents/CHEF2/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\n\nimport { useSession, signOut } from 'next-auth/react'\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport backendAPI from '@/lib/axiosInstance'\n\nconst meals = [\n  { title: 'Meal 1', description: 'Description of meal 1.' },\n  { title: 'Meal 2', description: 'Description of meal 2.' },\n  { title: 'Meal 3', description: 'Description of meal 3.' },\n  { title: 'Meal 4', description: 'Description of meal 4.' },\n]\n\nfunction ProgressCircle({ label, progress, color }: { label: string; progress: number; color: string }) {\n  const radius = 50\n  const circumference = 2 * Math.PI * radius\n  const offset = circumference - (progress / 100) * circumference\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <svg className=\"w-20 h-20\">\n        <circle\n          className=\"text-gray-200\"\n          strokeWidth=\"8\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"40\"\n          cy=\"40\"\n        />\n        <circle\n          className={color}\n          strokeWidth=\"8\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          stroke=\"currentColor\"\n          fill=\"transparent\"\n          r={radius}\n          cx=\"40\"\n          cy=\"40\"\n          style={{ transition: 'stroke-dashoffset 0.5s ease' }}\n        />\n      </svg>\n      <span className=\"mt-2 text-sm font-medium\">{label}</span>\n      <span className=\"text-gray-500 text-xs\">{progress}%</span>\n    </div>\n  )\n}\n\nexport default function DashboardPage() {\n  const { data: session, status } = useSession()\n  const router = useRouter()\n\n  const [analytics, setAnalytics] = useState<any>(null)\n  const [messages, setMessages] = useState<{ role: 'user' | 'ai'; content: string }[]>([])\n  const [newMessage, setNewMessage] = useState('')\n  const [selectedMeal, setSelectedMeal] = useState<any>(null)\n\n  useEffect(() => {\n    const fetchAnalytics = async () => {\n      try {\n        const response = await backendAPI.get(\"/user/analytics\")\n        setAnalytics(response.data.analytics)\n      } catch (error) {\n        console.error(\"Error fetching analytics:\", error)\n      }\n    }\n\n    if (status === \"authenticated\") {\n      fetchAnalytics()\n    }\n  }, [status])\n\n  const handleSend = async () => {\n    if (!newMessage.trim()) return\n\n    setMessages((prev) => [...prev, { role: 'user', content: newMessage }])\n\n    try {\n      const response = await backendAPI.post('/chatbot/', { message: newMessage })\n      const aiReply = response.data.response\n      setMessages((prev) => [...prev, { role: 'user', content: newMessage }, { role: 'ai', content: aiReply }])\n    } catch (error) {\n      console.error('Error sending message:', error)\n      setMessages((prev) => [...prev, { role: 'ai', content: \"⚠️ Sorry, something went wrong.\" }])\n    }\n\n    setNewMessage('')\n  }\n\n  const openModal = (meal: any) => {\n    setSelectedMeal(meal)\n  }\n\n  const closeModal = () => {\n    setSelectedMeal(null)\n  }\n\n  if (status === 'loading') return <p>Loading session...</p>\n  if (status === 'unauthenticated') return <p>You must be logged in to view this page.</p>\n\n  return (\n    <div className=\"pb-20 min-h-screen bg-gradient-to-r from-orange-400 via-red-500 to-pink-500 animate-gradient\">\n      <div className=\"flex justify-between items-center p-6 m-6 bg-white/30 backdrop-blur-lg rounded-xl shadow-lg\">\n        <h1 className=\"text-2xl font-semibold text-white\">Welcome, {session?.user?.name}</h1>\n        <div className=\"flex items-center space-x-4\">\n          {session?.user?.image && (\n            <img src={session.user.image} alt=\"User Profile\" className=\"w-10 h-10 rounded-full object-cover border\" />\n          )}\n          <button onClick={() => signOut()} className=\"px-3 py-2 bg-white/30 hover:bg-white/50 rounded-lg text-sm font-medium text-white\">\n            Sign Out\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex gap-6 px-6\">\n        {/* Calendar Section */}\n        <div className=\"w-[30%] bg-white/30 backdrop-blur-lg p-5 rounded-xl shadow-md\">\n          <h2 className=\"text-lg font-semibold text-white mb-4\">Your Calendar</h2>\n          <iframe\n            src={`https://calendar.google.com/calendar/embed?src=${session?.user?.email}&ctz=America%2FNew_York&mode=AGENDA`}\n            style={{ border: 0, width: '100%', height: '90%' }}\n            frameBorder=\"0\"\n          />\n        </div>\n\n        {/* Middle Column */}\n        <div className=\"flex flex-col gap-6 w-[35%]\">\n          {/* Meal Analytics */}\n          <div className=\"p-5 bg-white/30 backdrop-blur-lg rounded-xl shadow-md\">\n            <h2 className=\"text-lg font-semibold text-white mb-6\">Meal Analytics</h2>\n            {analytics ? (\n              <div className=\"flex flex-col items-center\">\n                <div className=\"flex space-x-10 mb-6\">\n                  <ProgressCircle label=\"Protein\" progress={analytics.average_macros_per_meal.protein} color=\"text-blue-400\" />\n                  <ProgressCircle label=\"Carbs\" progress={analytics.average_macros_per_meal.carbs} color=\"text-green-400\" />\n                  <ProgressCircle label=\"Fats\" progress={analytics.average_macros_per_meal.fats} color=\"text-yellow-300\" />\n                </div>\n                <div className=\"text-center text-white text-sm\">\n                  <p>Avg Calories: {analytics.average_calories_per_meal} kcal</p>\n                  <p>Goal Tracking: {analytics.goal_tracking}</p>\n                  <p>Popular Times: {analytics.most_popular_meal_times.join(\", \")}</p>\n                </div>\n              </div>\n            ) : (\n              <p className=\"text-white\">Loading analytics...</p>\n            )}\n          </div>\n\n          {/* Potential Meals */}\n          <div className=\"p-5 bg-white/30 backdrop-blur-lg rounded-xl shadow-md\">\n            <h2\n              className=\"text-lg font-semibold text-white mb-6 cursor-pointer hover:underline\"\n              onClick={() => router.push('/meals')}\n            >\n              Potential Meals\n            </h2>\n            <div className=\"relative w-full overflow-hidden\">\n              <style jsx>{`\n                @keyframes scroll {\n                  0% { transform: translateX(0); }\n                  100% { transform: translateX(-50%); }\n                }\n              `}</style>\n              <div className=\"flex animate-scroll whitespace-nowrap\" style={{ animation: 'scroll 20s linear infinite' }}>\n                {[...meals, ...meals].map((meal, index) => (\n                  <div\n                    key={index}\n                    onClick={() => openModal(meal)}\n                    className=\"cursor-pointer flex-shrink-0 w-[220px] h-[220px] mx-2 bg-white/40 backdrop-blur-md rounded-xl shadow-md flex flex-col justify-center items-center border border-white/30\"\n                  >\n                    <h3 className=\"text-base font-semibold text-gray-800\">{meal.title}</h3>\n                    <p className=\"mt-2 text-xs text-gray-600 text-center px-4\">{meal.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Chat Assistant */}\n        <div className=\"w-[30%] bg-white/30 backdrop-blur-lg rounded-xl shadow-md p-5 flex flex-col h-[700px]\">\n          <h2 className=\"text-lg font-semibold text-white mb-4\">Chat Assistant</h2>\n          <div className=\"flex-1 bg-white/20 rounded-lg p-4 overflow-y-auto space-y-4\">\n            {messages.map((msg, index) => (\n              <div key={index} className={`text-${msg.role === 'user' ? 'right' : 'left'}`}>\n                <div className={`inline-block px-3 py-2 rounded-lg ${msg.role === 'user' ? 'bg-blue-200' : 'bg-gray-200'}`}>\n                  {msg.content}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"flex mt-4\">\n            <input\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyDown={(e) => { if (e.key === 'Enter') handleSend() }}\n              type=\"text\"\n              placeholder=\"Type your message...\"\n              className=\"flex-1 p-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-white text-sm bg-white/30 text-white placeholder-white\"\n            />\n            <button onClick={handleSend} className=\"ml-2 px-3 py-2 bg-white/30 hover:bg-white/50 text-white rounded-lg text-sm font-medium\">\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Meal Modal */}\n      {selectedMeal && (\n        <div className=\"fixed inset-0 bg-white/20 backdrop-blur-md flex justify-center items-center z-50\">\n          <div className=\"bg-white p-8 rounded-xl max-w-md w-full shadow-md\">\n            <h2 className=\"text-xl font-bold mb-4\">{selectedMeal.title}</h2>\n            <p className=\"mb-2\">Ingredients: Example Ingredients...</p>\n            <p>Recipe: Example recipe steps...</p>\n            <button onClick={closeModal} className=\"mt-4 px-4 py-2 bg-gray-300 rounded hover:bg-gray-400 text-gray-800 font-medium\">\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Bottom Navbar */}\n      <div className=\"fixed bottom-0 left-0 w-full bg-white/20 backdrop-blur-lg text-white border-t flex justify-around items-center h-16 z-50\">\n        <button onClick={() => router.push('/')} className=\"hover:text-gray-100\">Home</button>\n        <button onClick={() => router.push('/meals')} className=\"hover:text-gray-100\">Meals</button>\n        <button onClick={() => router.push('/grocerylist')} className=\"hover:text-gray-100\">Grocery List</button>\n        <button onClick={() => router.push('/profile')} className=\"hover:text-gray-100\">Profile</button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;;AAOA,MAAM,QAAQ;IACZ;QAAE,OAAO;QAAU,aAAa;IAAyB;IACzD;QAAE,OAAO;QAAU,aAAa;IAAyB;IACzD;QAAE,OAAO;QAAU,aAAa;IAAyB;IACzD;QAAE,OAAO;QAAU,aAAa;IAAyB;CAC1D;AAED,SAAS,eAAe,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAsD;IACpG,MAAM,SAAS;IACf,MAAM,gBAAgB,IAAI,KAAK,EAAE,GAAG;IACpC,MAAM,SAAS,gBAAgB,AAAC,WAAW,MAAO;IAElD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,WAAU;wBACV,aAAY;wBACZ,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAG;wBACH,IAAG;;;;;;kCAEL,6LAAC;wBACC,WAAW;wBACX,aAAY;wBACZ,iBAAiB;wBACjB,kBAAkB;wBAClB,eAAc;wBACd,QAAO;wBACP,MAAK;wBACL,GAAG;wBACH,IAAG;wBACH,IAAG;wBACH,OAAO;4BAAE,YAAY;wBAA8B;;;;;;;;;;;;0BAGvD,6LAAC;gBAAK,WAAU;0BAA4B;;;;;;0BAC5C,6LAAC;gBAAK,WAAU;;oBAAyB;oBAAS;;;;;;;;;;;;;AAGxD;KAnCS;AAqCM,SAAS;;IACtB,MAAM,EAAE,MAAM,OAAO,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD;IAC3C,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8C,EAAE;IACvF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAEtD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;0DAAiB;oBACrB,IAAI;wBACF,MAAM,WAAW,MAAM,8HAAA,CAAA,UAAU,CAAC,GAAG,CAAC;wBACtC,aAAa,SAAS,IAAI,CAAC,SAAS;oBACtC,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,6BAA6B;oBAC7C;gBACF;;YAEA,IAAI,WAAW,iBAAiB;gBAC9B;YACF;QACF;kCAAG;QAAC;KAAO;IAEX,MAAM,aAAa;QACjB,IAAI,CAAC,WAAW,IAAI,IAAI;QAExB,YAAY,CAAC,OAAS;mBAAI;gBAAM;oBAAE,MAAM;oBAAQ,SAAS;gBAAW;aAAE;QAEtE,IAAI;YACF,MAAM,WAAW,MAAM,8HAAA,CAAA,UAAU,CAAC,IAAI,CAAC,aAAa;gBAAE,SAAS;YAAW;YAC1E,MAAM,UAAU,SAAS,IAAI,CAAC,QAAQ;YACtC,YAAY,CAAC,OAAS;uBAAI;oBAAM;wBAAE,MAAM;wBAAQ,SAAS;oBAAW;oBAAG;wBAAE,MAAM;wBAAM,SAAS;oBAAQ;iBAAE;QAC1G,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,YAAY,CAAC,OAAS;uBAAI;oBAAM;wBAAE,MAAM;wBAAM,SAAS;oBAAkC;iBAAE;QAC7F;QAEA,cAAc;IAChB;IAEA,MAAM,YAAY,CAAC;QACjB,gBAAgB;IAClB;IAEA,MAAM,aAAa;QACjB,gBAAgB;IAClB;IAEA,IAAI,WAAW,WAAW,qBAAO,6LAAC;kBAAE;;;;;;IACpC,IAAI,WAAW,mBAAmB,qBAAO,6LAAC;kBAAE;;;;;;IAE5C,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;;4BAAoC;4BAAU,SAAS,MAAM;;;;;;;kCAC3E,6LAAC;wBAAI,WAAU;;4BACZ,SAAS,MAAM,uBACd,6LAAC;gCAAI,KAAK,QAAQ,IAAI,CAAC,KAAK;gCAAE,KAAI;gCAAe,WAAU;;;;;;0CAE7D,6LAAC;gCAAO,SAAS,IAAM,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD;gCAAK,WAAU;0CAAoF;;;;;;;;;;;;;;;;;;0BAMpI,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCACC,KAAK,CAAC,+CAA+C,EAAE,SAAS,MAAM,MAAM,mCAAmC,CAAC;gCAChH,OAAO;oCAAE,QAAQ;oCAAG,OAAO;oCAAQ,QAAQ;gCAAM;gCACjD,aAAY;;;;;;;;;;;;kCAKhB,6LAAC;wBAAI,WAAU;;0CAEb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAwC;;;;;;oCACrD,0BACC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAe,OAAM;wDAAU,UAAU,UAAU,uBAAuB,CAAC,OAAO;wDAAE,OAAM;;;;;;kEAC3F,6LAAC;wDAAe,OAAM;wDAAQ,UAAU,UAAU,uBAAuB,CAAC,KAAK;wDAAE,OAAM;;;;;;kEACvF,6LAAC;wDAAe,OAAM;wDAAO,UAAU,UAAU,uBAAuB,CAAC,IAAI;wDAAE,OAAM;;;;;;;;;;;;0DAEvF,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;;4DAAE;4DAAe,UAAU,yBAAyB;4DAAC;;;;;;;kEACtD,6LAAC;;4DAAE;4DAAgB,UAAU,aAAa;;;;;;;kEAC1C,6LAAC;;4DAAE;4DAAgB,UAAU,uBAAuB,CAAC,IAAI,CAAC;;;;;;;;;;;;;;;;;;6DAI9D,6LAAC;wCAAE,WAAU;kDAAa;;;;;;;;;;;;0CAK9B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,WAAU;wCACV,SAAS,IAAM,OAAO,IAAI,CAAC;kDAC5B;;;;;;kDAGD,6LAAC;kFAAc;;;;;;0DAOb,6LAAC;gDAAsD,OAAO;oDAAE,WAAW;gDAA6B;0FAAzF;0DACZ;uDAAI;uDAAU;iDAAM,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC/B,6LAAC;wDAEC,SAAS,IAAM,UAAU;kGACf;;0EAEV,6LAAC;0GAAa;0EAAyC,KAAK,KAAK;;;;;;0EACjE,6LAAC;0GAAY;0EAA+C,KAAK,WAAW;;;;;;;uDALvE;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAcjB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;0CACtD,6LAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC,KAAK,sBAClB,6LAAC;wCAAgB,WAAW,CAAC,KAAK,EAAE,IAAI,IAAI,KAAK,SAAS,UAAU,QAAQ;kDAC1E,cAAA,6LAAC;4CAAI,WAAW,CAAC,kCAAkC,EAAE,IAAI,IAAI,KAAK,SAAS,gBAAgB,eAAe;sDACvG,IAAI,OAAO;;;;;;uCAFN;;;;;;;;;;0CAOd,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCACC,OAAO;wCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wCAC7C,WAAW,CAAC;4CAAQ,IAAI,EAAE,GAAG,KAAK,SAAS;wCAAa;wCACxD,MAAK;wCACL,aAAY;wCACZ,WAAU;;;;;;kDAEZ,6LAAC;wCAAO,SAAS;wCAAY,WAAU;kDAAyF;;;;;;;;;;;;;;;;;;;;;;;;YAQrI,8BACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA0B,aAAa,KAAK;;;;;;sCAC1D,6LAAC;4BAAE,WAAU;sCAAO;;;;;;sCACpB,6LAAC;sCAAE;;;;;;sCACH,6LAAC;4BAAO,SAAS;4BAAY,WAAU;sCAAiF;;;;;;;;;;;;;;;;;0BAQ9H,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAO,SAAS,IAAM,OAAO,IAAI,CAAC;wBAAM,WAAU;kCAAsB;;;;;;kCACzE,6LAAC;wBAAO,SAAS,IAAM,OAAO,IAAI,CAAC;wBAAW,WAAU;kCAAsB;;;;;;kCAC9E,6LAAC;wBAAO,SAAS,IAAM,OAAO,IAAI,CAAC;wBAAiB,WAAU;kCAAsB;;;;;;kCACpF,6LAAC;wBAAO,SAAS,IAAM,OAAO,IAAI,CAAC;wBAAa,WAAU;kCAAsB;;;;;;;;;;;;;;;;;;AAIxF;GAtLwB;;QACY,iJAAA,CAAA,aAAU;QAC7B,qIAAA,CAAA,YAAS;;;MAFF","debugId":null}}]
}