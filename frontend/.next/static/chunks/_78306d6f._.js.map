{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/shreyajayakumar/Documents/CHEF2/frontend/src/app/grocerylist/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { useSession } from 'next-auth/react'\nimport { useRouter } from 'next/navigation'\n\nconst meals = [\n  {\n    title: 'Pizza',\n    ingredients: ['Dough', 'Tomato Sauce', 'Mozzarella', 'Pepperoni', 'Basil'],\n  },\n  {\n    title: 'Tacos',\n    ingredients: ['Tortillas', 'Ground Beef', 'Lettuce', 'Cheddar', 'Salsa'],\n  },\n  {\n    title: 'Pasta',\n    ingredients: ['Spaghetti', 'Marinara Sauce', 'Meatballs', 'Parmesan'],\n  },\n  {\n    title: 'Salad',\n    ingredients: ['Romaine Lettuce', 'Cherry Tomatoes', 'Cucumber', 'Croutons', 'Ranch Dressing'],\n  },\n  {\n    title: 'Stir Fry',\n    ingredients: ['Chicken Breast', 'Broccoli', 'Carrots', 'Soy Sauce', 'Rice'],\n  },\n]\n\nexport default function GroceryListPage() {\n  const { data: session, status } = useSession()\n  const router = useRouter()\n\n  const [selectedIngredients, setSelectedIngredients] = useState<string[]>([])\n  const [expandedMeal, setExpandedMeal] = useState<string | null>(null)\n\n  const toggleIngredient = (ingredient: string) => {\n    if (selectedIngredients.includes(ingredient)) {\n      setSelectedIngredients(selectedIngredients.filter((item) => item !== ingredient))\n    } else {\n      setSelectedIngredients([...selectedIngredients, ingredient])\n    }\n  }\n\n  const handleAddToInstacart = () => {\n    window.open('https://www.instacart.com/', '_blank')\n  }\n\n  if (status === 'loading') return <p>Loading...</p>\n  if (status === 'unauthenticated') return <p>You must be logged in to view this page.</p>\n\n  return (\n    <div className=\"flex flex-col min-h-screen bg-gradient-to-r from-orange-400 via-red-500 to-pink-500 animate-gradient pb-20\">\n      {/* Top Profile Section */}\n      <div className=\"flex w-full p-6 bg-white/30 backdrop-blur-md rounded-b-xl shadow-lg\">\n        {/* Left side: Profile Pic + Info */}\n        <div className=\"flex flex-col items-center w-1/3 space-y-4\">\n          <img\n            src={session?.user?.image || 'https://via.placeholder.com/120'}\n            alt=\"Profile Picture\"\n            className=\"w-32 h-32 rounded-full border-4 border-white object-cover\"\n          />\n          <h2 className=\"text-3xl font-bold text-white\">{session?.user?.name || 'Grocery Planner'}</h2>\n        </div>\n\n        {/* Right side: Bio/Description */}\n        <div className=\"flex flex-col justify-center w-2/3 pl-10 text-white\">\n          <h3 className=\"text-xl font-semibold mb-2\">Your Grocery List</h3>\n          <p className=\"text-md\">\n            Pick your ingredients easily and head to Instacart! ðŸ›’\n          </p>\n        </div>\n      </div>\n\n      {/* Main Grocery Section */}\n      <div className=\"flex flex-col items-center mt-8 px-4 w-full\">\n        <h2 className=\"text-2xl font-bold mb-6 text-white\">Saved Meals</h2>\n\n        {/* Meal + Ingredients Section */}\n        <div className=\"flex flex-col gap-6 w-full max-w-4xl\">\n          {meals.map((meal) => (\n            <div key={meal.title} className=\"bg-white/30 backdrop-blur-lg p-6 rounded-xl shadow-md border border-white/20\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-xl font-bold text-gray-800\">{meal.title}</h3>\n                <button\n                  onClick={() => setExpandedMeal(expandedMeal === meal.title ? null : meal.title)}\n                  className=\"text-green-500 hover:underline\"\n                >\n                  {expandedMeal === meal.title ? 'Hide Ingredients' : 'Show Ingredients'}\n                </button>\n              </div>\n\n              {expandedMeal === meal.title && (\n                <div className=\"mt-4 space-y-2\">\n                  {meal.ingredients.map((ingredient) => (\n                    <div key={ingredient} className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id={ingredient}\n                        checked={selectedIngredients.includes(ingredient)}\n                        onChange={() => toggleIngredient(ingredient)}\n                        className=\"mr-2\"\n                      />\n                      <label htmlFor={ingredient} className=\"text-gray-700\">{ingredient}</label>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Instacart Button */}\n        <button\n          onClick={handleAddToInstacart}\n          className=\"mt-8 w-full max-w-md bg-green-500 hover:bg-green-600 text-white py-3 rounded-xl text-xl font-semibold\"\n        >\n          Open Instacart ðŸ›’\n        </button>\n      </div>\n\n      {/* Bottom Navigation Bar */}\n      <div className=\"fixed bottom-0 left-0 w-full bg-white/20 backdrop-blur-md text-white flex justify-around items-center h-16 shadow-inner z-50\">\n        <button onClick={() => router.push('/dashboard')} className=\"hover:text-gray-100\">Home</button>\n        <button onClick={() => router.push('/meals')} className=\"hover:text-gray-100\">Meals</button>\n        <button onClick={() => router.push('/grocerylist')} className=\"hover:text-gray-100\">Grocery List</button>\n        <button onClick={() => router.push('/profile')} className=\"hover:text-gray-100\">Profile</button>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/shreyajayakumar/Documents/CHEF2/frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}