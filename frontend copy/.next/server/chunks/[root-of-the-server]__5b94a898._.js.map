{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/ben/Downloads/jack/frontend/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\"\nimport GoogleProvider from \"next-auth/providers/google\"\nimport { NextAuthOptions } from \"next-auth\"\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n    }),\n  ],\n  secret: process.env.NEXTAUTH_SECRET,\n  \n  callbacks: {\n    async jwt({ token, account }) {\n      // Capture the id_token when the user signs in\n      if (account) {\n        token.idToken = account.id_token;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      // Pass idToken into the session\n      session.idToken = token.idToken;\n      return session;\n    },\n  },\n}\n\nconst handler = NextAuth(authOptions)\n\nexport { handler as GET, handler as POST }\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGO,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAEnC,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE;YAC1B,8CAA8C;YAC9C,IAAI,SAAS;gBACX,MAAM,OAAO,GAAG,QAAQ,QAAQ;YAClC;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,gCAAgC;YAChC,QAAQ,OAAO,GAAG,MAAM,OAAO;YAC/B,OAAO;QACT;IACF;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE","debugId":null}}]
}